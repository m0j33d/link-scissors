{"version":3,"file":"static/js/758.70eb695c.chunk.js","mappings":"qQASe,SAASA,IAAiB,IAADC,EACpCC,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAEtBI,EAAgC,QAA3BP,EADS,IAAIQ,gBAAgBC,OAAOC,SAASC,QAC9BC,IAAI,gBAAQ,IAAAZ,EAAAA,EAAI,GAEpCa,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,SAAU,GACVC,sBAAuB,IAE3BC,iBAAkBC,EAAAA,GAAW,CACzBH,SAAUG,EAAAA,KACLC,SAAS,wBACTC,IAAI,EAAG,oCACZJ,sBAAuBE,EAAAA,KAClBG,MAAM,CAACH,EAAAA,GAAQ,iBAAaI,GAAY,wBACxCH,SAAS,oBAElBI,SAAS,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAM,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACY,OAAzBL,GAAIM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQP,GAAM,IAAEvB,MAAAA,IAAK2B,EAAAE,KAAA,GAEbE,EAAAA,EAAAA,IAAcP,GAAM,KAAD,EAA5B,GAED,QAFFC,EAAGE,EAAAK,YAED,IAAHP,GAAAA,EAAKD,KAAK,CAADG,EAAAE,KAAA,eAAAF,EAAAM,OAAA,iBAEdlC,GAAY,GAAM,wBAAA4B,EAAAO,OAAA,GAAAZ,EAAA,KAErB,gBAAAa,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,EATQ,KAYb,GAAIvC,EAAU,OAAOwC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,WAGlC,IAAQjB,EAA2DjB,EAA3DiB,OAAQkB,EAAmDnC,EAAnDmC,OAAQC,EAA2CpC,EAA3CoC,WAAYC,EAA+BrC,EAA/BqC,aAAcC,EAAiBtC,EAAjBsC,aAElD,OACIN,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,CAAAC,UACIR,EAAAA,EAAAA,KAAA,OAAKS,UAAU,mCAAkCD,UAC7CE,EAAAA,EAAAA,MAAA,WAASD,UAAU,uCAAsCD,SAAA,EACrDR,EAAAA,EAAAA,KAAA,KAAGW,KAAK,IAAIF,UAAU,2BAA0BD,UAC5CR,EAAAA,EAAAA,KAAA,OAAKY,IAAKC,EAAAA,EAAiBJ,UAAU,YAAYK,IAAI,YAEzDd,EAAAA,EAAAA,KAAA,MAAAQ,SAAI,4BAGJE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,qBAAoBD,SAAA,EAE/BR,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,WAAWN,UAAU,aAAYD,SAAE,cAClDR,EAAAA,EAAAA,KAAA,SACIgB,YAAY,WACZC,KAAK,WACLC,KAAK,WACLT,UAAU,aACVU,SAAUb,EACVc,MAAOnC,EAAOd,WAEjBgC,EAAOhC,WAAY6B,EAAAA,EAAAA,KAAA,QAAMS,UAAU,QAAOD,SAAEL,EAAOhC,YAEpD6B,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,wBAAwBN,UAAU,aAAYD,SAAE,2BAC/DR,EAAAA,EAAAA,KAAA,SACIgB,YAAY,sBACZC,KAAK,wBACLC,KAAK,WACLT,UAAU,aACVU,SAAUb,EACVc,MAAOnC,EAAOb,wBAEjB+B,EAAO/B,wBAAyB4B,EAAAA,EAAAA,KAAA,QAAMS,UAAU,QAAOD,SAAEL,EAAO/B,yBAEjE4B,EAAAA,EAAAA,KAAA,UACIS,UAAU,eACVY,QAAS,WACLjB,GACJ,EAAEI,SAEDH,EAAe,aAAe,6BAS3D,C","sources":["pages/ResetPassword.tsx"],"sourcesContent":["import { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nimport { resetPassword } from \"../services/auth\";\nimport LinkScissorLogo from '../assets/images/logo.svg';\n\n\nexport default function ResetPassword() {\n    const [redirect, setRedirect] = useState(false);\n    const queryParams = new URLSearchParams(window.location.search)\n    const token = queryParams.get(\"token\") ?? ''\n\n    const formik = useFormik({\n        initialValues: {\n            password: \"\",\n            password_confirmation: \"\",\n        },\n        validationSchema: Yup.object({\n            password: Yup.string()\n                .required(\"password is required\")\n                .min(6, \"password must be of 6 characters\"),\n            password_confirmation: Yup.string()\n                .oneOf([Yup.ref(\"password\"), undefined], \"Passwords must match\")\n                .required(\"Field required\")\n        }),\n        onSubmit: async (values) => {\n            const data = { ...values, token };\n\n            const res = await resetPassword(data);\n\n            if (!res?.data) return;\n\n            setRedirect(true);\n\n        }\n    })\n\n    if (redirect) return <Navigate to=\"/login\" />;\n\n\n    const { values, errors, submitForm, isSubmitting, handleChange } = formik;\n\n    return (\n        <>\n            <div className=\"flex flex-col w-screen h-screen \">\n                <section className=\"m-auto text-center md:w-96 max-w-2xl\">\n                    <a href=\"/\" className='flex justify-center my-6'>\n                        <img src={LinkScissorLogo} className=\"w-24 h-24\" alt=\"Logo\" />\n                    </a>\n                    <h2> Create a new password</h2>\n\n\n                    <div className=\"flex flex-col my-8\">\n\n                        <label htmlFor=\"password\" className=\"form-label\" >Password</label>\n                        <input\n                            placeholder=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            className=\"form-input\"\n                            onChange={handleChange}\n                            value={values.password}\n                        />\n                        {errors.password && <span className=\"error\">{errors.password}</span>}\n\n                        <label htmlFor=\"password_confirmation\" className=\"form-label\" >Password confirmation</label>\n                        <input\n                            placeholder=\"type password again\"\n                            name=\"password_confirmation\"\n                            type=\"password\"\n                            className=\"form-input\"\n                            onChange={handleChange}\n                            value={values.password_confirmation}\n                        />\n                        {errors.password_confirmation && <span className=\"error\">{errors.password_confirmation}</span>}\n\n                        <button\n                            className=\"button  my-4\"\n                            onClick={() => {\n                                submitForm();\n                            }}\n                        >\n                            {isSubmitting ? \"loading...\" : \"Change password\"}\n                        </button>\n                    </div>\n\n                </section>\n\n            </div>\n        </>\n    )\n}"],"names":["ResetPassword","_queryParams$get","_useState","useState","_useState2","_slicedToArray","redirect","setRedirect","token","URLSearchParams","window","location","search","get","formik","useFormik","initialValues","password","password_confirmation","validationSchema","Yup","required","min","oneOf","undefined","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","data","res","wrap","_context","prev","next","_objectSpread","resetPassword","sent","abrupt","stop","_x","apply","arguments","_jsx","Navigate","to","errors","submitForm","isSubmitting","handleChange","_Fragment","children","className","_jsxs","href","src","LinkScissorLogo","alt","htmlFor","placeholder","name","type","onChange","value","onClick"],"sourceRoot":""}