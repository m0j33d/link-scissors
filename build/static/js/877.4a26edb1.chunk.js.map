{"version":3,"file":"static/js/877.4a26edb1.chunk.js","mappings":"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","sources":["components/Navbar.tsx","components/QRCodeViewer.tsx","pages/MyLinks.tsx","services/shortner.ts"],"sourcesContent":["import LinkScissorLogo from '../assets/images/logo.svg';\nimport { logout } from \"../services/auth\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nconst Navbar = ({ logged_in }: { logged_in: boolean }) => {\n  const handleLogout = async () => {\n    await logout();\n  };\n\n  return (\n    <nav className='navbar flex items-center justify-between px-6 py-6'>\n      <a href=\"/\" className='flex justify-between my-auto'>\n        <img src={LinkScissorLogo} className=\"w-8 h-8\" alt=\"Logo\" />\n        <h1 className='bold text-xl my-auto mx-4'>LinkScissors</h1>\n      </a>\n\n\n      {!logged_in &&\n        <ul className=\"flex\">\n          <li key={1}>\n            <Link className=\" border px-12 p-2 rounded-lg bg-[#efefef] hover:bg-[#0087cb]\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n\n          <li key={2}>\n            <Link className=\" border px-12 p-2 mx-4 rounded-lg bg-[#efefef] hover:bg-[#0087cb]\" to=\"/register\">Sign Up\n            </Link>\n          </li>\n        </ul>\n\n      }\n\n\n      {logged_in &&\n        <ul className=\"flex\">\n          <li key={1}>\n            <Link to=\"/links\"className=\"hover:cursor-pointer border px-12 p-2 rounded-lg bg-[#efefef] hover:bg-[#0087cb]\">\n              My Links\n            </Link>\n          </li>\n\n          <li key={2}>\n            <span className=\"hover:cursor-pointer mx-4 border px-12 p-2 rounded-lg bg-[#efefef] hover:bg-[#0087cb]\" onClick={handleLogout}>\n              Logout\n            </span>\n          </li>\n        </ul>\n      }\n    </nav >\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    logged_in: state.logged_in,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);","import React, { useRef } from 'react';\nimport { showAlert } from \"../utils/utils\";\n\ninterface QRCodeImageProps {\n  data: string;\n}\n\nconst QRCodeImage: React.FC<QRCodeImageProps> = ({ data }) => {\n  const qrCodeRef = useRef<HTMLImageElement>(null);\n\n  const handleCopyClick = () => {\n    if (qrCodeRef.current) {\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      const image = qrCodeRef.current;\n\n      if (context) {\n        canvas.width = image.width;\n        canvas.height = image.height;\n        context.drawImage(image, 0, 0);\n\n        canvas.toBlob((blob) => {\n          if (blob) {\n            const item = new ClipboardItem({ 'image/png': blob });\n            navigator.clipboard.write([item]);\n\n            showAlert({\n              msg: \"QRcode copied\",\n              type: \"success\",\n          });\n          }\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <img ref={qrCodeRef} src={data} alt=\"QR Code\" className=\"w-48 h-48 mb-4\" />\n      <button\n        onClick={handleCopyClick}\n        className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\"\n      >\n        Copy QR Code\n      </button>\n    </div>\n  );\n};\n\nexport default QRCodeImage;\n","import { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { connect } from \"react-redux\";\nimport { Navigate } from 'react-router-dom';\nimport QRCodeViewer from '../components/QRCodeViewer';\nimport { getLinks } from '../services/shortner';\nimport { getQRcode } from '../services/shortner';\nimport { ThreeDots } from \"react-loader-spinner\"\n\n\nconst MyLinks = ({ logged_in, user }: { logged_in: boolean, user: any }) => {\n  const [shortenedLinks, setShortenedLinks] = useState([]);\n  const [generateCode, setGeneratedCode] = useState(null);\n  const [isLoading, setIsLoading ] = useState(true)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getLinks({ user_id: user?._id });\n        setIsLoading(false)\n        setShortenedLinks(response)\n\n      } catch (error) {\n        // Handle any errors\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n\n  }, [user?._id]);\n\n  const handleQRcodeGenerate = async (url: string) => {\n    const res = await getQRcode({ url });\n    setGeneratedCode(res?.data?.url)\n  }\n  if (!logged_in) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mx-auto\">\n\n        <h1 className=\"text-2xl font-bold my-8\">URL Links</h1>\n\n        <table className=\"w-full border-collapse\">\n          <thead>\n            <tr>\n              <th className=\"py-2 px-4 border-b\">Original Link</th>\n              <th className=\"py-2 px-4 border-b\">Short Link</th>\n              <th className=\"py-2 px-4 border-b\">Clicks</th>\n              <th className=\"py-2 px-4 border-b\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {!!shortenedLinks.length && shortenedLinks.map((item: any) => (\n              <tr key={item?.id}>\n                <td className=\"py-2 px-4 border-b text-center\">\n                  <a className=\"text-blue-500 hover:underline\" rel=\"noreferrer\" href={item.full_url} target='_blank'>{item.full_url}</a>\n                </td>\n                <td className=\"py-2 px-4 border-b text-center\">\n                  <a className=\"text-blue-500 hover:underline\" rel=\"noreferrer\" href={item.short_url} target='_blank'>{item.short_url} </a>\n                </td>\n                <td className=\"py-2 px-4 border-b text-center\">{item.clicks}</td>\n                <td className=\"py-2 px-4 border-b text-center\">\n                  {generateCode && <QRCodeViewer data={generateCode} />}\n\n                  {!generateCode &&  <button\n                    onClick={() => handleQRcodeGenerate(item.short_url)}\n                    className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\"\n                  >\n                    Generate QR Code\n                  </button>}\n                 \n                </td>\n              </tr>\n            ))}\n          </tbody>\n\n        </table>\n\n        {isLoading && !shortenedLinks.length && <section className='w-screen my-32 flex justify-center'>\n                <ThreeDots\n                    height=\"80\"\n                    width=\"80\"\n                    radius=\"9\"\n                    color=\"#015BB5\"\n                    ariaLabel=\"three-dots-loading\"\n                    wrapperStyle={{}}\n                    visible={true}\n                />\n            </section>\n            }\n\n        {!isLoading && !shortenedLinks.length && <div className='w-full text-center my-12 '> You have no shortened links</div>}\n\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    logged_in: state.logged_in,\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(MyLinks);","import api from './api';\nimport { store } from \"../redux/store\";\nimport { showAlert } from \"../utils/utils\";\n\nexport const getLinks = async ({ user_id } : { user_id:string }) => {\n    try {\n        const token = store.getState().user_token;\n        const response = await api.get(`/url/shorten?user_id=${user_id}`, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n            \n        });\n        return response.data;\n    } catch (error : any) {\n        showAlert({\n            msg: error.response.data.message,\n            type: \"danger\",\n        });\n\n        console.log(error)\n    }\n};\n\nexport const short = async ({ url, custom_alias, user_id } : { url:string , custom_alias: null | string, user_id: string}) => {\n    try {\n        const token = store.getState().user_token;\n\n        console.log(user_id)\n        const response = await api.post(`/url/shorten`,  { url, user_id }, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n            \n        });\n        return response.data;\n    } catch (error : any) {\n        showAlert({\n            msg: error.response.data.message,\n            type: \"danger\",\n        });\n\n        console.log(error)\n    }\n};\n\nexport const getQRcode = async ({ url } : { url:string | null}) => {\n    try {\n        const token = store.getState().user_token;\n\n        const response = await api.post(`/url/shorten/qrcode`,  { url }, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n            \n        });\n        return response.data;\n    } catch (error : any) {\n        showAlert({\n            msg: error.response.data.message,\n            type: \"danger\",\n        });\n\n        console.log(error)\n    }\n};\n\nexport const getAnalytics = async ({ link } : { link:string }) => {\n    try {\n        const token = store.getState().user_token;\n        const params = new URLSearchParams({ link });\n\n        const response = await api.get(`/fetch?${params.toString()}`, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        });\n\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n};\n\n"],"names":["connect","state","logged_in","_ref","handleLogout","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","logout","stop","apply","arguments","_jsxs","className","children","href","_jsx","src","LinkScissorLogo","alt","Link","to","onClick","data","qrCodeRef","useRef","ref","current","canvas","document","createElement","context","getContext","image","width","height","drawImage","toBlob","blob","item","ClipboardItem","navigator","clipboard","write","showAlert","msg","type","user","_useState","useState","_useState2","_slicedToArray","shortenedLinks","setShortenedLinks","_useState3","_useState4","generateCode","setGeneratedCode","_useState5","_useState6","isLoading","setIsLoading","useEffect","fetchData","response","getLinks","user_id","_id","sent","t0","console","error","handleQRcodeGenerate","_ref3","_callee2","url","_res$data","res","_context2","getQRcode","_x","_Fragment","Navbar","length","map","rel","full_url","target","short_url","clicks","QRCodeViewer","id","ThreeDots","radius","color","ariaLabel","wrapperStyle","visible","Navigate","token","store","getState","user_token","api","get","concat","headers","Authorization","abrupt","message","log","short","_ref4","custom_alias","post","_x2","_ref6","_callee3","_ref5","_context3","_x3"],"sourceRoot":""}